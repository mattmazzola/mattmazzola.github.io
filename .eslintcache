[{"C:\\repos\\mattmazzola\\src\\App.tsx":"1","C:\\repos\\mattmazzola\\src\\component\\Project.tsx":"2","C:\\repos\\mattmazzola\\src\\component\\FeaturedProject.tsx":"3","C:\\repos\\mattmazzola\\src\\projects.ts":"4","C:\\repos\\mattmazzola\\src\\index.tsx":"5"},{"size":1683,"mtime":1606347085053,"results":"6","hashOfConfig":"7"},{"size":1141,"mtime":1606342503973,"results":"8","hashOfConfig":"7"},{"size":278,"mtime":1606333193582,"results":"9","hashOfConfig":"7"},{"size":3014,"mtime":1606346013708,"results":"10","hashOfConfig":"7"},{"size":493,"mtime":1606269727561,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"3jsv68",{"filePath":"14","messages":"15","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"16"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\repos\\mattmazzola\\src\\App.tsx",[],"C:\\repos\\mattmazzola\\src\\component\\Project.tsx",["23"],"import React from 'react'\r\nimport * as models from '../models'\r\nimport './Project.css'\r\n\r\ntype Props = {\r\n    project: models.Project\r\n}\r\n\r\nconst Project: React.FC<Props> = ({ project }) => {\r\n\r\n    return (\r\n        <a className=\"project\" href={project.websiteUrl ?? project.articleUrl ?? project.codeUrl} target=\"_blank\" rel=\"noreferrer\">\r\n            <img src={project.imgUrl} alt={`Preview image for ${project.name} project`} />\r\n            <div className=\"metadata\">\r\n                <div>\r\n                    <h3>{project.name}</h3>\r\n                    <p>{project.description}</p>\r\n                </div>\r\n                {(project.articleUrl || project.websiteUrl) && (\r\n                    <div className=\"buttons\">\r\n                        {project.articleUrl\r\n                            && <a href={project.articleUrl} className=\"button-article\" target=\"_blank\" rel=\"noreferrer\">Article</a>}\r\n                        <a href={project.codeUrl} className=\"button-code\" target=\"_blank\" rel=\"noreferrer\">Code</a>\r\n                    </div>\r\n                )}\r\n            </div>\r\n        </a>\r\n    )\r\n}\r\n\r\nexport default Project","C:\\repos\\mattmazzola\\src\\component\\FeaturedProject.tsx",[],"C:\\repos\\mattmazzola\\src\\projects.ts",[],"C:\\repos\\mattmazzola\\src\\index.tsx",[],{"ruleId":"24","severity":1,"message":"25","line":13,"column":13,"nodeType":"26","endLine":13,"endColumn":91},"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You donâ€™t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement"]