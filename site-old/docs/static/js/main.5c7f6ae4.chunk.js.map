{"version":3,"sources":["component/Project.tsx","projects.ts","links.ts","App.tsx","reportWebVitals.ts","GlobalStyles.tsx","index.tsx"],"names":["PreviewImage","styled","img","Metadata","div","Buttons","ArticleButton","a","CodeButton","Wrapper","Project","project","className","href","websiteUrl","articleUrl","codeUrl","target","rel","src","imgUrl","alt","name","description","projects","links","featuredProject","undefined","AppWrapper","Header","header","CenterWrapper","HeaderContent","HeaderLinks","Photo","Name","Main","Projects","Footer","footer","FooterContent","App","map","link","text","Fragment","i","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","GlobalStyles","createGlobalStyle","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5c7f6ae4.chunk.js","sourcesContent":["import React from 'react'\r\nimport * as models from '../models'\r\nimport styled from 'styled-components'\r\n\r\ntype Props = {\r\n    project: models.Project\r\n}\r\n\r\nconst Project: React.FC<Props> = ({ project }) => {\r\n\r\n    return (\r\n        <Wrapper className=\"project\" href={project.websiteUrl ?? project.articleUrl ?? project.codeUrl} target=\"_blank\" rel=\"noreferrer\">\r\n            <PreviewImage src={project.imgUrl} alt={`${project.name} project`} />\r\n            <Metadata>\r\n                <div>\r\n                    <h3>{project.name}</h3>\r\n                    <p>{project.description}</p>\r\n                </div>\r\n                {(project.articleUrl || project.websiteUrl) && (\r\n                    <Buttons>\r\n                        {project.articleUrl\r\n                            && <ArticleButton href={project.articleUrl} target=\"_blank\" rel=\"noreferrer\">Article</ArticleButton>}\r\n                        <CodeButton href={project.codeUrl} target=\"_blank\" rel=\"noreferrer\">Code</CodeButton>\r\n                    </Buttons>\r\n                )}\r\n            </Metadata>\r\n        </Wrapper>\r\n    )\r\n}\r\n\r\nconst PreviewImage = styled.img`\r\n    transition: all 0.5s ease-out;\r\n    width: 100%;\r\n\r\n    & p {\r\n        color: hsl(0, 0%, 76%);\r\n    }\r\n`\r\n\r\nconst Metadata = styled.div`\r\n    display: grid;\r\n    grid-auto-flow: column;\r\n    grid-gap: 1rem;\r\n\r\n    align-items: end;\r\n\r\n    position: absolute;\r\n    left: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    z-index: 2;\r\n    padding: 1rem;\r\n    color: hsl(0, 0%, 85%);\r\n    background-color: hsla(0, 0%, 0%, 0.6);\r\n\r\n    & h2, h3, h4 {\r\n        margin: 0;\r\n        padding: 0;\r\n    }\r\n\r\n    & p {\r\n        margin: 0;\r\n        padding: 0;\r\n    \r\n        font-size: 0.75rem;\r\n    }\r\n`\r\n\r\nconst Buttons = styled.div`\r\n    justify-self: end;\r\n\r\n    display: grid;\r\n    grid-gap: 0.5rem;;\r\n    \r\n    & a {\r\n        border-radius: 1rem;\r\n        padding: 0.25rem 0.5rem;\r\n        background-color: hsl(0, 0%, 33%);\r\n        color: white;\r\n        font-size: 0.75rem;\r\n    \r\n        text-decoration: none;\r\n    }\r\n`\r\n\r\nconst ArticleButton = styled.a`\r\n    &:hover {\r\n        background-color: hsl(0, 87%, 76%);\r\n    }\r\n`\r\n\r\nconst CodeButton = styled.a`\r\n    &:hover {\r\n        background-color: hsl(202, 67%, 71%);\r\n    }\r\n`\r\n\r\nconst Wrapper = styled.a`\r\n    height: 250px;\r\n    position: relative;\r\n    overflow: hidden;\r\n\r\n    &:hover ${PreviewImage} {\r\n        transform: scale(1.1);\r\n        transition: all 5s ease-out;\r\n    }\r\n\r\n    &:hover ${Metadata} {\r\n        color: white;\r\n\r\n        & p {\r\n            color: white;\r\n        }\r\n    }\r\n`\r\n\r\n\r\nexport default Project","import { Project } from './models'\r\n\r\nexport const projects: Project[]  = [\r\n    {\r\n        name: \"Slate Entity Labeler v2\",\r\n        imgUrl: \"images/slate-next-labeler.png\",\r\n        websiteUrl: \"https://mattmazzola.github.io/slate-entity-labeler-next/\",\r\n        codeUrl: \"https://github.com/mattmazzola/slate-entity-labeler-next\",\r\n        description: \"Rebuilt entity labeler with next version SlateJS\",\r\n    },\r\n    {\r\n        name: \"Personal Projects Site\",\r\n        imgUrl: \"images/projectsSite.png\",\r\n        codeUrl: \"https://github.com/mattmazzola/mattmazzola.github.io\",\r\n        description: \"This Projects Website\",\r\n    },\r\n    {\r\n        name: \"Women of Valorant\",\r\n        imgUrl: \"images/womenofvalorant.png\",\r\n        codeUrl: \"https://github.com/mattmazzola/valorant-women\",\r\n        websiteUrl: \"https://www.womenofvalorant.com\",\r\n        description: \"React Drag-n Drop controls, Node/SQL service\",\r\n    },\r\n    {\r\n        name: \"Elo Rating System\",\r\n        imgUrl: \"images/elo01.png\",\r\n        codeUrl: \"https://github.com/sc2iq/sc2iq/tree/master/packages/ratingSystem\",\r\n        websiteUrl: \"https://mattmazzola.medium.com/understanding-the-elo-rating-system-264572c7a2b4\",\r\n        description: \"Elo Rating System, Logistic Curve\"\r\n    },\r\n    {\r\n        name: \"Sc2Info Chat Bots\",\r\n        imgUrl: \"images/sc2infoBot.png\",\r\n        codeUrl: \"https://github.com/sc2iq/sc2info/tree/master/bots\",\r\n        websiteUrl: \"https://www.sc2info.com/ask\",\r\n        description: \"Discord, Twitch, Bots, Fuse.js, Local Extraction\"\r\n    },\r\n    {\r\n        name: \"Slate Mention Editor\",\r\n        imgUrl: \"images/slateMentionEditor.png\",\r\n        codeUrl: \"http://www.github.com/mattmazzola/slate-mention-editor\",\r\n        websiteUrl: \"https://mattmazzola.github.io/slate-mention-editor/\",\r\n        description: \"SlateJS, mentions\",\r\n    },\r\n    {\r\n        name: \"sc2info.com\",\r\n        imgUrl: \"images/sc2info.png\",\r\n        codeUrl: \"http://www.github.com/sc2iq/sc2info\",\r\n        websiteUrl: \"https://www.sc2info.com/units\",\r\n        description: \"Graphql, foundation for QnA chatbots\",\r\n    },\r\n    {\r\n        name: \"SchultzTables\",\r\n        imgUrl: \"images/schultztables.png\",\r\n        codeUrl: \"https://github.com/mattmazzola/schultz-tables\",\r\n        websiteUrl: \"https://schultztables.surge.sh/\",\r\n        description: \"Modals, CSS Grid, Auth0 + TypeScript\",\r\n    },\r\n    {\r\n        name: \"Slate Entity Labeler\",\r\n        imgUrl: \"images/slateEntityLabeler.png\",\r\n        codeUrl: \"http://www.github.com/mattmazzola/slate-entity-labeler\",\r\n        websiteUrl: \"https://mattmazzola.github.io/slate-entity-labeler/\",\r\n        description: \"SlateJS, keyword selection\",\r\n    },\r\n    {\r\n        name: \"React Simple Auth\",\r\n        imgUrl: \"images/reactSimpleAuth.png\",\r\n        codeUrl: \"https://github.com/mattmazzola/react-simple-auth\",\r\n        websiteUrl: \"https://mattmazzola.medium.com/react-simple-auth-react-redux-oauth-2-0-de6ea9df0a63\",\r\n        description: \"React Authentication, Ember Simple Auth\"\r\n    },\r\n    {\r\n        name: \"Unofficial FRC Trainer\",\r\n        imgUrl: \"images/frc.png\",\r\n        codeUrl: \"https://github.com/mattmazzola/frc\",\r\n        websiteUrl: \"https://frc.surge.sh/\",\r\n        description: \"React, PWA, Text-To-Speech\"\r\n    },\r\n    {\r\n        name: \"ColorQueue\",\r\n        imgUrl: \"images/colorqueue.png\",\r\n        codeUrl: \"https://github.com/mattmazzola/colorqueueapp\",\r\n        websiteUrl: \"https://mattmazzola.medium.com/using-adafruit-dotstar-led-strips-with-raspberry-pi-or-remotely-controlling-raspberry-pi-from-2d20b1792047\",\r\n        description: \"Rasb Pi, Firebase, LED Strips\"\r\n    },\r\n    {\r\n        name: \"Medium\",\r\n        imgUrl: \"images/medium.png\",\r\n        codeUrl: \"http://mattmazzola.medium.com\",\r\n        description: \"Varous articles about these projects\",\r\n    },\r\n    {\r\n        name: \"Twitter\",\r\n        imgUrl: \"images/twitter.png\",\r\n        codeUrl: \"https://twitter.com/mdmazzola\",\r\n        description: \"Thoughts and Announcements\",\r\n    },\r\n    {\r\n        name: \"Github\",\r\n        imgUrl: \"images/github_placeholder.png\",\r\n        codeUrl: \"http://www.github.com/mattmazzola\",\r\n        description: \"Various Projects\",\r\n    },\r\n]\r\n\r\nexport default projects","import { Link } from './models'\r\n\r\nexport const links: Link[]  = [\r\n    {\r\n        description: 'GitHub (Personal)',\r\n        href: 'https://github.com/mattmazzola',\r\n    },\r\n    {\r\n        description: 'GitHub (Org)',\r\n        href: 'https://github.com/sc2iq',\r\n    },\r\n    {\r\n        description: 'Blog',\r\n        href: 'https://mattmazzola.medium.com',\r\n    },\r\n    {\r\n        description: 'Twitter',\r\n        href: 'https://twitter.com/mdmazzola',\r\n        // text: '@mdmazzola',\r\n    },\r\n]\r\n\r\nexport default links","import React from 'react'\r\nimport * as models from './models'\r\nimport Project from './component/Project'\r\nimport FeaturedProject from './component/FeaturedProject'\r\nimport projects from './projects'\r\nimport links from './links'\r\nimport styled from 'styled-components'\r\n\r\nconst featuredProject: models.Project | undefined = undefined\r\n\r\nconst App: React.FC = () => {\r\n  return (\r\n    <AppWrapper>\r\n      <Header>\r\n        <CenterWrapper>\r\n          <HeaderContent>\r\n            <Photo src=\"images/avatar.png\" alt=\"Matt Mazzola\" />\r\n            <Name>Matt Mazzola</Name>\r\n            <div>Personal Projects</div>\r\n            <HeaderLinks>\r\n              <dl>\r\n                {links.map(link => {\r\n                  let { description, href, text } = link\r\n                  text = text ?? href\r\n\r\n                  return (\r\n                    <React.Fragment key={href}>\r\n                      <dt>{description ? `${description}: ` : ''}</dt>\r\n                      <dd><a href={href} target=\"_blank\" rel=\"noreferrer\">{text}</a></dd>\r\n                    </React.Fragment>\r\n                  )\r\n                })}\r\n              </dl>\r\n            </HeaderLinks>\r\n          </HeaderContent>\r\n        </CenterWrapper>\r\n      </Header>\r\n      <Main>\r\n        {featuredProject &&\r\n          <FeaturedProject project={featuredProject} />}\r\n        <Projects>\r\n          {projects.map((project, i) => (\r\n            <Project key={i} project={project} />\r\n          ))}\r\n        </Projects>\r\n      </Main>\r\n      <Footer>\r\n        <CenterWrapper>\r\n          <FooterContent>\r\n            <div>\r\n              <h3>Links</h3>\r\n              <ul>\r\n                {links.map(link => {\r\n                  let { href, text } = link\r\n                  text = text ?? href\r\n\r\n                  return (\r\n                    <li key={href}><a href={href} target=\"_blank\" rel=\"noreferrer\">{text}</a></li>\r\n                  )\r\n                })}\r\n              </ul>\r\n            </div>\r\n          </FooterContent>\r\n        </CenterWrapper>\r\n      </Footer>\r\n    </AppWrapper>\r\n  )\r\n}\r\n\r\nconst AppWrapper = styled.div`\r\n  min-height: 100vh;\r\n\r\n  display: grid;\r\n  grid-template-rows: min-content 1fr min-content;\r\n`\r\n\r\nconst Header = styled.header`\r\n  padding: 1rem;\r\n`\r\n\r\nconst CenterWrapper = styled.div`\r\n  margin: 0 auto;\r\n  max-width: 1400px;\r\n`\r\n \r\nconst HeaderContent = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 1em;\r\n  font-size: 3rem;\r\n  flex-wrap: wrap;\r\n`\r\n\r\nconst HeaderLinks = styled.div`\r\n  font-size: 1rem;\r\n  color: hsl(0, 0%, 30%);\r\n\r\n  & a {\r\n    color: hsl(224, 51%, 32%);\r\n  }\r\n`\r\n\r\nconst Photo = styled.img`\r\n  border: 4px solid hsl(192, 48%, 62%);\r\n  border-radius: 50%;\r\n  box-shadow: var(--shadow-elevation-high);\r\n  background-color: grey;\r\n  width: 82px;\r\n  line-height: 0;\r\n`\r\n\r\nconst Name = styled.div`\r\n`\r\n\r\nconst Main = styled.div`\r\n  background-color: hsl(197, 6%, 22%);\r\n`\r\n\r\nconst Projects = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fit, minmax(400px, 1fr));\r\n`\r\n\r\nconst Footer = styled.footer`\r\n  padding: 2rem;\r\n`\r\n\r\nconst FooterContent = styled.div`\r\n  padding-bottom: 2em;\r\n\r\n  & a:link,\r\n  & a:visited {\r\n    color: black;\r\n  }\r\n`\r\n\r\n\r\n\r\nexport default App\r\n","import { ReportHandler } from 'web-vitals'\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry)\r\n      getFID(onPerfEntry)\r\n      getFCP(onPerfEntry)\r\n      getLCP(onPerfEntry)\r\n      getTTFB(onPerfEntry)\r\n    })\r\n  }\r\n}\r\n\r\nexport default reportWebVitals\r\n","import { createGlobalStyle } from 'styled-components'\r\n\r\nconst GlobalStyles = createGlobalStyle`\r\n  html, body {\r\n    height: 100vh;\r\n  }\r\n  \r\n  body {\r\n    margin: 0;\r\n    padding: 0;\r\n  \r\n    font-size: 18px;\r\n    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',\r\n      'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',\r\n      sans-serif;\r\n    -webkit-font-smoothing: antialiased;\r\n    -moz-osx-font-smoothing: grayscale;\r\n  \r\n    background-color: hsl(40, 9%, 87%);\r\n  }\r\n  \r\n  code {\r\n    font-family: source-code-pro, Menlo, Monaco, Consolas, 'Courier New',\r\n      monospace;\r\n  }\r\n  \r\n  #root {\r\n    min-height: 100%;\r\n    isolation: isolate;\r\n  }\r\n\r\n  dl {\r\n    display: grid;\r\n    grid-template: auto / max-content max-content;\r\n    grid-gap: 0 1rem;\r\n  }\r\n  \r\n  dl dt {\r\n    font-weight: bold;\r\n  }\r\n  \r\n  dl dd {\r\n    margin :0;\r\n  }\r\n\r\n  :root {\r\n    --shadow-color: 30deg 2% 60%;\r\n    --shadow-elevation-low:\r\n      -0.3px 0.2px 0.3px hsl(var(--shadow-color) / 0.55),\r\n      -0.4px 0.3px 0.4px -2.5px hsl(var(--shadow-color) / 0.37),\r\n      -1px 0.9px 1px -5px hsl(var(--shadow-color) / 0.18);\r\n    --shadow-elevation-medium:\r\n      -0.3px 0.2px 0.3px hsl(var(--shadow-color) / 0.58),\r\n      -0.5px 0.4px 0.5px -1.7px hsl(var(--shadow-color) / 0.44),\r\n      -1.8px 1.5px 1.8px -3.3px hsl(var(--shadow-color) / 0.29),\r\n      -5.2px 4.4px 5.1px -5px hsl(var(--shadow-color) / 0.15);\r\n    --shadow-elevation-high:\r\n      -0.3px 0.2px 0.3px hsl(var(--shadow-color) / 0.54),\r\n      -0.4px 0.3px 0.4px -0.7px hsl(var(--shadow-color) / 0.47),\r\n      -0.8px 0.7px 0.8px -1.4px hsl(var(--shadow-color) / 0.4),\r\n      -2.1px 1.8px 2.1px -2.1px hsl(var(--shadow-color) / 0.34),\r\n      -4.6px 3.9px 4.5px -2.9px hsl(var(--shadow-color) / 0.27),\r\n      -8.7px 7.4px 8.6px -3.6px hsl(var(--shadow-color) / 0.2),\r\n      -14.8px 12.6px 14.6px -4.3px hsl(var(--shadow-color) / 0.13),\r\n      -23.4px 19.8px 23px -5px hsl(var(--shadow-color) / 0.07);\r\n  }\r\n`\r\n\r\nexport default GlobalStyles","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\nimport reportWebVitals from './reportWebVitals'\r\nimport GlobalStyles from './GlobalStyles'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n    <GlobalStyles />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n)\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals()\r\n"],"sourceRoot":""}